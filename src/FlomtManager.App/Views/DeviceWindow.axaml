<Window
	xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:i="https://github.com/projektanker/icons.avalonia"
	xmlns:local="using:FlomtManager.App.Views"
	xmlns:enums="using:FlomtManager.App.Enums"
	xmlns:coreEnums="using:FlomtManager.Core.Enums"
	xmlns:vm="using:FlomtManager.App.ViewModels"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
    x:Class="FlomtManager.App.Views.DeviceWindow"
    x:DataType="vm:DeviceViewModel"
    Icon="/Assets/avalonia-logo.ico"
    Title="{Binding Device.Name}">

	<Window.DataTemplates>
		<DataTemplate DataType="{x:Type vm:ParameterViewModel}">
			<Border Classes.Error="{Binding Error}" Padding="2">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition SharedSizeGroup="A" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0" Classes="Tertiary" Text="{Binding Parameter.Name}" />
					<TextBlock Grid.Column="1" Margin="4,0" Text="{Binding Value, TargetNullValue='-'}" />
					<TextBlock Grid.Column="2" Text="{Binding Parameter.Unit}" />
				</Grid>
			</Border>
		</DataTemplate>
	</Window.DataTemplates>
	
	<Grid RowDefinitions="auto,*,auto">
		<Border
			Grid.Row="0"
			Margin="4"
			Padding="12,4"
			Theme="{DynamicResource CardBorder}">
			<StackPanel Orientation="Horizontal" Spacing="12">
				<TextBlock
					VerticalAlignment="Center"
					Classes="H6"
					Text="{Binding Device.Name}"
					Theme="{DynamicResource TitleTextBlock}" />
				
				<Button
					VerticalAlignment="Center"
					Classes="Primary"
					Theme="{DynamicResource BorderlessButton}"
					Command="{Binding RequestDeviceUpdate}"
					CommandParameter="{Binding Device}"
					IsEnabled="{
						Binding ConnectionState, 
						Converter={StaticResource EqualsConverter}, 
						ConverterParameter={x:Static coreEnums:ConnectionState.Disconnected}}">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">
						<i:Icon Value="fa-solid fa-pen-to-square" />
						<TextBlock Text="Edit" />
					</StackPanel>
				</Button>

				<Border Classes="Shadow" Theme="{StaticResource CardBorder}" Padding="4">
					<StackPanel Orientation="Horizontal" Spacing="4">
						<RadioButton
							Width="150"
							Padding="8,4"
							Content="Avalonia"
							IsChecked="{
								Binding ArchiveDisplayMode, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static enums:ArchiveDisplayMode.Chart}}"
							Command="{Binding SetDataDisplayMode}"
							CommandParameter="{x:Static enums:ArchiveDisplayMode.Chart}"
							Theme="{DynamicResource PureCardRadioButton}">
							<StackPanel Orientation="Horizontal" Spacing="4">
								<i:Icon Value="fa-solid fa-chart-line" />
								<TextBlock Text="Chart" />
							</StackPanel>
						</RadioButton>
						<RadioButton
							Width="150"
							Padding="8,4"
							IsChecked="{
								Binding ArchiveDisplayMode, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static enums:ArchiveDisplayMode.Table}}"
							Theme="{DynamicResource PureCardRadioButton}"
							Command="{Binding SetDataDisplayMode}"
							CommandParameter="{x:Static enums:ArchiveDisplayMode.Table}">
							<StackPanel Orientation="Horizontal" Spacing="4">
								<i:Icon Value="fa-solid fa-table" />
								<TextBlock Text="Table" />
							</StackPanel>
						</RadioButton>
					</StackPanel>
				</Border>
			</StackPanel>
		</Border>
		
		<Grid
			Grid.Row="1"
			ColumnDefinitions="auto,*">
			<Border 
				Grid.Column="0"
				BorderThickness="0,0,1,0"
				Theme="{DynamicResource CardBorder}" 
				Background="{DynamicResource SemiColorBackground0}"
				CornerRadius="0" Padding="0" Margin="0">
				<Grid RowDefinitions="auto,*">
					<ToggleSwitch
						Grid.Row="0"
						Name="toggle"
						Padding="4"
						Margin="4,0,4,4"
						IsChecked="True"
						HorizontalAlignment="Left"
						Theme="{DynamicResource ButtonToggleSwitch}">
						<ToggleSwitch.OnContent>
							<i:Icon Value="fa-solid fa-angle-left" />
						</ToggleSwitch.OnContent>
						<ToggleSwitch.OffContent>
							<i:Icon Value="fa-solid fa-angle-right" />
						</ToggleSwitch.OffContent>
					</ToggleSwitch>
					<ScrollViewer
						Grid.Row="1"
						IsVisible="{Binding #toggle.IsChecked, Mode=TwoWay}"
						Theme="{DynamicResource StaticScrollViewer}">
						<StackPanel Spacing="4" Width="250">
							
							<Border Classes="PaneBorder" Padding="0">
								<StackPanel>
									<StackPanel.Styles>
										<Style Selector="StackPanel.StatusStackPanel">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="Margin" Value="0,4" />
											<Setter Property="Spacing" Value="4" />
											<Setter Property="Orientation" Value="Horizontal" />
										</Style>
									</StackPanel.Styles>

									<Panel IsVisible="{
											Binding Device.ConnectionType, 
											Converter={StaticResource NotEqualsConverter},
											ConverterParameter={x:Static coreEnums:ConnectionType.File}}">
										
										<Button Content="Connect" Command="{Binding TryConnect}"
											IsVisible="{
												Binding ConnectionState, 
												Converter={StaticResource EqualsConverter}, 
												ConverterParameter={x:Static coreEnums:ConnectionState.Disconnected}}" />
										
										<Button Content="Connecting" IsEnabled="False"
											IsVisible="{
												Binding ConnectionState, 
												Converter={StaticResource EqualsConverter}, 
												ConverterParameter={x:Static coreEnums:ConnectionState.Connecting}}" />
										
										<Button Content="Disconnect" Command="{Binding TryDisconnect}"
											IsVisible="{
												Binding ConnectionState, 
												Converter={StaticResource EqualsConverter}, 
												ConverterParameter={x:Static coreEnums:ConnectionState.Connected}}" />
									</Panel>

									<Panel
										IsVisible="{
											Binding Device.ConnectionType, 
											Converter={StaticResource EqualsConverter}, 
											ConverterParameter={x:Static coreEnums:ConnectionType.File}}">
										<Button Content="Read File" />
									</Panel>
								</StackPanel>
							</Border>

							<Border Classes="PaneBorder">
								<StackPanel Spacing="10">
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Name" />
										<SelectableTextBlock Text="{Binding Device.Name, TargetNullValue='-'}" />
									</StackPanel>
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Address" />
										<SelectableTextBlock Text="{Binding Device.Address, TargetNullValue='-'}" />
									</StackPanel>
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Slave Id" />
										<SelectableTextBlock Text="{Binding Device.SlaveId}" />
									</StackPanel>
								</StackPanel>
							</Border>

							<Border Classes="PaneBorder">
								<StackPanel Spacing="5">
									<TextBlock Text="Integral" Classes="H6" Theme="{DynamicResource TitleTextBlock}" />
									<ItemsControl ItemsSource="{Binding IntegralParameters}" Grid.IsSharedSizeScope="True">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Spacing="2" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</StackPanel>
							</Border>

							<Border Classes="PaneBorder">
								<StackPanel Spacing="5">
									<TextBlock Text="Current" Classes="H6" Theme="{StaticResource TitleTextBlock}" />
									<ItemsControl ItemsSource="{Binding CurrentParameters}" Grid.IsSharedSizeScope="True">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Spacing="2" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</StackPanel>
							</Border>

							<local:DataGroupIntegration DataContext="{Binding DataGroupIntegration}" />
						</StackPanel>
					</ScrollViewer>
				</Grid>
			</Border>

			<Panel Grid.Column="1">

				<Panel IsVisible="{
					Binding ArchiveDisplayMode,
					Converter={StaticResource EqualsConverter},
					ConverterParameter={x:Static enums:ArchiveDisplayMode.Chart}}">
					<local:DataGroupChart DataContext="{Binding DataGroupChart}" />
				</Panel>

				<Panel IsVisible="{
					Binding ArchiveDisplayMode, 
					Converter={StaticResource EqualsConverter}, 
					ConverterParameter={x:Static enums:ArchiveDisplayMode.Table}}">
					<local:DataGroupTable DataContext="{Binding DataGroupTable}" />
				</Panel>

			</Panel>
		</Grid>
		
		<Panel Grid.Row="2">
			<Border Theme="{DynamicResource CardBorder}" CornerRadius="0" Margin="0" Padding="0">
				<StackPanel Orientation="Horizontal">
					<StackPanel.Styles>
						<Style Selector="Border.StatusBorder">
							<Setter Property="Theme" Value="{DynamicResource CardBorder}" />
							<Setter Property="CornerRadius" Value="0" />
							<Setter Property="Margin" Value="0" />
							<Setter Property="Padding" Value="4" />
							<Setter Property="BorderThickness" Value="0,0,1,0" />
						</Style>

						<Style Selector="Ellipse.DisconnectedStatus">
							<Setter Property="Fill" Value="{StaticResource SemiRed5Color}" />
						</Style>
						<Style Selector="Ellipse.ConnectingStatus">
							<Setter Property="Fill" Value="{StaticResource SemiOrange5Color}" />
						</Style>
						<Style Selector="Ellipse.ConnectedStatus">
							<Setter Property="Fill" Value="{StaticResource SemiGreen5Color}" />
						</Style>
					</StackPanel.Styles>

					<Border Classes="StatusBorder">
						<Ellipse
							Height="10"
							Width="10"
							Classes.DisconnectedStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static coreEnums:ConnectionState.Disconnected}}"
							Classes.ConnectingStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static coreEnums:ConnectionState.Connecting}}"
							Classes.ConnectedStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static coreEnums:ConnectionState.Connected}}"
							/>
					</Border>
					
					<Border Classes="StatusBorder">
						<TextBlock Classes="Tertiary" Text="{Binding LastTimeDataRead, StringFormat='Data read: {0:HH:mm:ss}', TargetNullValue='Data not read'}" />
					</Border>
					
					<Border Classes="StatusBorder">
						<StackPanel Orientation="Horizontal" Spacing="8" HorizontalAlignment="Stretch">
							<TextBlock Classes="Tertiary" Text="{Binding LastTimeArchiveRead, StringFormat='Archive read: {0:HH:mm:ss}', TargetNullValue='Archive not read'}" />
							<ProgressBar
								IsVisible="{
									Binding ArchiveReadingState, 
									Converter={StaticResource NotEqualsConverter},
									ConverterParameter={x:Static coreEnums:ArchiveReadingState.None}}"
								Classes.Warning="{
									Binding ArchiveReadingState, 
									Converter={StaticResource EqualsConverter},
									ConverterParameter={x:Static coreEnums:ArchiveReadingState.Reading}}"
								Classes.Success="{
									Binding ArchiveReadingState, 
									Converter={StaticResource EqualsConverter},
									ConverterParameter={x:Static coreEnums:ArchiveReadingState.Complete}}"
								Width="250"
								Height="10"
								Maximum="100"
								Minimum="0"
								Value="{Binding ArchiveReadingProgress}" />
						</StackPanel>
					</Border>
				</StackPanel>
			</Border>
		</Panel>
	</Grid>
</Window>
