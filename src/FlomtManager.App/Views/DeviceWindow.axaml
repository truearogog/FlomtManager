<Window
	xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:vm="using:FlomtManager.Domain.Abstractions.ViewModels"
	xmlns:local="using:FlomtManager.App.Views"
	xmlns:enums="using:FlomtManager.App.Enums"
	xmlns:domainEnums="using:FlomtManager.Domain.Enums"
    xmlns:colorPicker="clr-namespace:Semi.Avalonia.ColorPicker;assembly=Semi.Avalonia.ColorPicker"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
    x:Class="FlomtManager.App.Views.DeviceWindow"
    x:DataType="vm:IDeviceViewModel"
    Icon="/Assets/avalonia-logo.ico"
    Title="{Binding Device.Name}">

	<Window.DataTemplates>
		<DataTemplate DataType="{x:Type vm:IParameterViewModel}">
			<Border Classes.Error="{Binding Error}" Padding="2">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition SharedSizeGroup="A" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0" Classes="Tertiary" Text="{Binding Parameter.Name}" />
					<TextBlock Grid.Column="1" Margin="4,0" Text="{Binding Value, TargetNullValue='-'}" />
					<TextBlock Grid.Column="2" Text="{Binding Parameter.Unit}" />
				</Grid>
			</Border>
		</DataTemplate>
	</Window.DataTemplates>
	
	<Grid RowDefinitions="auto,*,auto">
		<Border
			Grid.Row="0"
			Margin="4"
			Padding="12,4"
			Theme="{DynamicResource CardBorder}">
			<StackPanel Orientation="Horizontal" Spacing="12">
				<TextBlock
					VerticalAlignment="Center"
					Classes="H6"
					Text="{Binding Device.Name}"
					Theme="{DynamicResource TitleTextBlock}" />
				
				<Button
					VerticalAlignment="Center"
					Classes="Primary"
					Theme="{DynamicResource BorderlessButton}"
					Command="{Binding RequestDeviceUpdate}"
					CommandParameter="{Binding Device}"
					IsEnabled="{Binding IsEditable}">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">
						<PathIcon
							Theme="{DynamicResource InnerPathIcon}"
							HorizontalAlignment="Center"
							Data="{DynamicResource SemiIconEdit}" />
						<TextBlock Text="Edit" />
					</StackPanel>
				</Button>

				<Border Classes="Shadow" Theme="{StaticResource CardBorder}" Padding="4">
					<StackPanel Orientation="Horizontal" Spacing="4">
						<StackPanel.Styles>
							<Style Selector="RadioButton">
								<Setter Property="MinWidth" Value="180" />
								<Setter Property="Padding" Value="8,4" />
								<Setter Property="Theme" Value="{DynamicResource PureCardRadioButton}" />
							</Style>
						</StackPanel.Styles>
						<RadioButton 
							IsChecked="{Binding DeviceViewMode, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static domainEnums:DeviceViewMode.Chart}}"
							Command="{Binding SetDataDisplayMode}"
							CommandParameter="{x:Static domainEnums:DeviceViewMode.Chart}">
							<StackPanel Orientation="Horizontal" Spacing="4">
								<PathIcon
									Theme="{DynamicResource InnerPathIcon}"
									HorizontalAlignment="Center"
									Data="{DynamicResource SemiIconHistogram}" />
								<TextBlock Text="Chart" />
							</StackPanel>
						</RadioButton>
						<RadioButton
							IsChecked="{Binding DeviceViewMode, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static domainEnums:DeviceViewMode.Table}}"
							Theme="{DynamicResource PureCardRadioButton}"
							Command="{Binding SetDataDisplayMode}"
							CommandParameter="{x:Static domainEnums:DeviceViewMode.Table}">
							<StackPanel Orientation="Horizontal" Spacing="4">
								<PathIcon
									Theme="{DynamicResource InnerPathIcon}"
									HorizontalAlignment="Center"
									Data="{DynamicResource SemiIconGridSquare}" />
								<TextBlock Text="Table" />
							</StackPanel>
						</RadioButton>
						<!--<RadioButton
							IsChecked="{Binding DeviceViewMode, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static domainEnums:DeviceViewMode.CurrentParameters}}"
							Command="{Binding SetDataDisplayMode}"
							CommandParameter="{x:Static domainEnums:DeviceViewMode.CurrentParameters}">
							<StackPanel Orientation="Horizontal" Spacing="4">
								<PathIcon
									Theme="{DynamicResource InnerPathIcon}"
									HorizontalAlignment="Center"
									Data="{DynamicResource SemiIconActivity}" />
								<TextBlock Text="Current Parameters" />
							</StackPanel>
						</RadioButton>-->
					</StackPanel>
				</Border>
			</StackPanel>
		</Border>
		
		<Grid
			Grid.Row="1"
			ColumnDefinitions="auto,*">
			<Border 
				Grid.Column="0"
				BorderThickness="0,0,1,0"
				Theme="{DynamicResource CardBorder}" 
				Background="{DynamicResource SemiColorBackground0}"
				CornerRadius="0" Padding="0" Margin="0">
				<Grid RowDefinitions="auto,*">

					<Grid Grid.Row="0" ColumnDefinitions="auto,*" Margin="4,0,4,4">
						<ToggleSwitch
							Grid.Column="0"
							Name="toggle"
							Padding="4"
							IsChecked="True"
							HorizontalAlignment="Left"
							Theme="{DynamicResource ButtonToggleSwitch}">
							<ToggleSwitch.OnContent>
								<PathIcon
									Theme="{DynamicResource InnerPathIcon}"
									HorizontalAlignment="Center"
									Data="{DynamicResource SemiIconChevronRight}">
									<PathIcon.RenderTransform>
										<RotateTransform Angle="180" />
									</PathIcon.RenderTransform>
								</PathIcon>
							</ToggleSwitch.OnContent>
							<ToggleSwitch.OffContent>
								<PathIcon
									Theme="{DynamicResource InnerPathIcon}"
									HorizontalAlignment="Center"
									Data="{DynamicResource SemiIconChevronRight}" />
							</ToggleSwitch.OffContent>
						</ToggleSwitch>

						<Panel 
							Grid.Column="1"
							Margin="4,0,0,0"
							IsVisible="{Binding #toggle.IsChecked, Mode=TwoWay}">
							<Panel IsVisible="{
								Binding Device.ConnectionType, 
								Converter={StaticResource NotEqualsConverter},
								ConverterParameter={x:Static domainEnums:ConnectionType.File}}">

								<Button Content="Connect" Command="{Binding TryConnect}"
									IsVisible="{
										Binding ConnectionState, 
										Converter={StaticResource EqualsConverter}, 
										ConverterParameter={x:Static domainEnums:ConnectionState.Disconnected}}" />

								<Button Content="Connecting" IsEnabled="False"
									IsVisible="{
										Binding ConnectionState, 
										Converter={StaticResource EqualsConverter}, 
										ConverterParameter={x:Static domainEnums:ConnectionState.Connecting}}" />

								<Button Content="Disconnect" Command="{Binding TryDisconnect}"
									IsVisible="{
										Binding ConnectionState, 
										Converter={StaticResource EqualsConverter}, 
										ConverterParameter={x:Static domainEnums:ConnectionState.Connected}}" />
							</Panel>

							<Panel
								IsVisible="{
									Binding Device.ConnectionType, 
									Converter={StaticResource EqualsConverter}, 
									ConverterParameter={x:Static domainEnums:ConnectionType.File}}">

								<Button Content="Read File" Command="{Binding RequestReadFile}"
									IsVisible="{
										Binding ConnectionState, 
										Converter={StaticResource NotEqualsConverter}, 
										ConverterParameter={x:Static domainEnums:ConnectionState.ReadingFile}}" />

								<Button Content="Reading File" IsEnabled="False"
									IsVisible="{
										Binding ConnectionState, 
										Converter={StaticResource EqualsConverter}, 
										ConverterParameter={x:Static domainEnums:ConnectionState.ReadingFile}}" />

							</Panel>
						</Panel>
					</Grid>

					<Panel Grid.Row="1" Width="250" IsVisible="{Binding #toggle.IsChecked, Mode=TwoWay}" >
						<Grid RowDefinitions="auto,*">

							<ScrollViewer Grid.Row="1" Theme="{DynamicResource StaticScrollViewer}">
								<StackPanel Spacing="4">

									<Border Classes="PaneBorder">
										<StackPanel Spacing="10">
											<StackPanel>
												<TextBlock Classes="Tertiary" Text="Name" />
												<SelectableTextBlock Text="{Binding Device.Name, TargetNullValue='-'}" />
											</StackPanel>
											<StackPanel>
												<TextBlock Classes="Tertiary" Text="Address" />
												<SelectableTextBlock Text="{Binding Device.Address, TargetNullValue='-'}" />
											</StackPanel>
											<StackPanel>
												<TextBlock Classes="Tertiary" Text="Slave Id" />
												<SelectableTextBlock Text="{Binding Device.SlaveId}" />
											</StackPanel>
										</StackPanel>
									</Border>

									<Border Classes="PaneBorder">
										<StackPanel Spacing="5">
											<TextBlock Text="Integral" Classes="H6" Theme="{DynamicResource TitleTextBlock}" />
											<ItemsControl ItemsSource="{Binding IntegralParameters}" Grid.IsSharedSizeScope="True">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Spacing="2" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
											</ItemsControl>
										</StackPanel>
									</Border>

									<Border Classes="PaneBorder">
										<StackPanel Spacing="5">
											<TextBlock Text="Current" Classes="H6" Theme="{StaticResource TitleTextBlock}" />
											<ItemsControl ItemsSource="{Binding CurrentParameters}" Grid.IsSharedSizeScope="True">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Spacing="2" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
											</ItemsControl>
										</StackPanel>
									</Border>

									<local:DataGroupIntegration DataContext="{Binding DataIntegration}" />
								</StackPanel>
							</ScrollViewer>
						</Grid>
					</Panel>
				</Grid>
			</Border>

			<Panel Grid.Column="1">

				<Panel IsVisible="{
					Binding DeviceViewMode,
					Converter={StaticResource EqualsConverter},
					ConverterParameter={x:Static domainEnums:DeviceViewMode.Chart}}">
					<local:DataGroupChart DataContext="{Binding DataChart}" />
				</Panel>

				<Panel IsVisible="{
					Binding DeviceViewMode, 
					Converter={StaticResource EqualsConverter}, 
					ConverterParameter={x:Static domainEnums:DeviceViewMode.Table}}">
					<local:DataGroupTable DataContext="{Binding DataTable}" />
				</Panel>

			</Panel>
		</Grid>
		
		<Panel Grid.Row="2">
			<Border Theme="{DynamicResource CardBorder}" CornerRadius="0" Margin="0" Padding="0">
				<StackPanel Orientation="Horizontal">
					<StackPanel.Styles>
						<Style Selector="Border.StatusBorder">
							<Setter Property="Theme" Value="{DynamicResource CardBorder}" />
							<Setter Property="CornerRadius" Value="0" />
							<Setter Property="Margin" Value="0" />
							<Setter Property="Padding" Value="4" />
							<Setter Property="BorderThickness" Value="0,0,1,0" />
						</Style>

						<Style Selector="Ellipse.DisconnectedStatus">
							<Setter Property="Fill" Value="{StaticResource SemiRed5Color}" />
						</Style>
						<Style Selector="Ellipse.ConnectingStatus">
							<Setter Property="Fill" Value="{StaticResource SemiOrange5Color}" />
						</Style>
						<Style Selector="Ellipse.ConnectedStatus">
							<Setter Property="Fill" Value="{StaticResource SemiGreen5Color}" />
						</Style>
						<Style Selector="Ellipse.ReadingFileStatus">
							<Setter Property="Fill" Value="{StaticResource SemiBlue4Color}" />
						</Style>
					</StackPanel.Styles>

					<Border Classes="StatusBorder">
						<Ellipse
							Height="10"
							Width="10"
							Classes.DisconnectedStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static domainEnums:ConnectionState.Disconnected}}"
							Classes.ConnectingStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static domainEnums:ConnectionState.Connecting}}"
							Classes.ConnectedStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static domainEnums:ConnectionState.Connected}}"
							Classes.ReadingFileStatus="{
								Binding ConnectionState, 
								Converter={StaticResource EqualsConverter}, 
								ConverterParameter={x:Static domainEnums:ConnectionState.ReadingFile}}"
							/>
					</Border>
					
					<Border Classes="StatusBorder">
						<TextBlock Classes="Tertiary" Text="{Binding LastTimeDataRead, StringFormat='Data read: {0:HH:mm:ss}', TargetNullValue='Data not read'}" />
					</Border>
					
					<Border Classes="StatusBorder">
						<StackPanel Orientation="Horizontal" Spacing="8" HorizontalAlignment="Stretch">
							<TextBlock Classes="Tertiary" Text="{Binding LastTimeArchiveRead, StringFormat='Archive read: {0:HH:mm:ss}', TargetNullValue='Archive not read'}" />
							<ProgressBar
								IsVisible="{
									Binding ArchiveReadingState, 
									Converter={StaticResource NotEqualsConverter},
									ConverterParameter={x:Static domainEnums:ArchiveReadingState.None}}"
								Classes.Warning="{
									Binding ArchiveReadingState, 
									Converter={StaticResource EqualsConverter},
									ConverterParameter={x:Static domainEnums:ArchiveReadingState.Reading}}"
								Classes.Success="{
									Binding ArchiveReadingState, 
									Converter={StaticResource EqualsConverter},
									ConverterParameter={x:Static domainEnums:ArchiveReadingState.Complete}}"
								Width="250"
								Height="10"
								Maximum="100"
								Minimum="0"
								Value="{Binding ArchiveReadingProgress}" />
						</StackPanel>
					</Border>
				</StackPanel>
			</Border>
		</Panel>
	</Grid>
</Window>
