<Window
	xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:i="https://github.com/projektanker/icons.avalonia"
	xmlns:enums="using:FlomtManager.Core.Enums"
	xmlns:vm="using:FlomtManager.App.ViewModels"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
    x:Class="FlomtManager.App.Views.DeviceWindow"
    x:DataType="vm:DeviceViewModel"
    Icon="/Assets/avalonia-logo.ico"
    Title="{Binding Device.Name}">

	<Window.Styles>
		<Style Selector="TextBlock, SelectableTextBlock, i|Icon">
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
		<Style Selector="Border.Error">
			<Setter Property="Background" Value="{DynamicResource SemiColorDangerLight}" />
			<Setter Property="BorderBrush" Value="{DynamicResource SemiColorDanger}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="CornerRadius" Value="2" />
		</Style>
	</Window.Styles>

	<Window.DataTemplates>
		<DataTemplate DataType="{x:Type vm:ParameterViewModel}">
			<Border Classes.Error="{Binding Error}" Padding="2">
				<StackPanel>
					<TextBlock Classes="Tertiary" Text="{Binding Name}" />
					<Grid ColumnDefinitions="*,auto">
						<TextBlock Grid.Column="0" Text="{Binding Value, Converter={StaticResource IsNullOrEmptyElseConverter}, ConverterParameter='-'}" />
						<TextBlock Grid.Column="1" Text="{Binding Unit}" />
					</Grid>
				</StackPanel>
			</Border>
		</DataTemplate>
	</Window.DataTemplates>
	
	<Grid RowDefinitions="auto,*,auto">
		<Border
			Grid.Row="0"
			Margin="8"
			Padding="12,4"
			Theme="{DynamicResource CardBorder}">
			<StackPanel Orientation="Horizontal" Spacing="8">
				<TextBlock
					VerticalAlignment="Center"
					Classes="H6"
					Text="{Binding Device.Name}"
					Theme="{DynamicResource TitleTextBlock}" />
				<Button
					Classes="Primary"
					Theme="{DynamicResource BorderlessButton}"
					Command="{Binding UpdateDevice}"
					CommandParameter="{Binding Device}">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">
						<i:Icon Value="fa-solid fa-pen-to-square" />
						<TextBlock Text="Edit" />
					</StackPanel>
				</Button>
			</StackPanel>
		</Border>
		<Grid
			Grid.Row="1"
			ColumnDefinitions="auto,*">
			<Border 
				Grid.Column="0"
				BorderThickness="0,0,1,0"
				Theme="{DynamicResource CardBorder}" 
				Background="{DynamicResource SemiColorBackground0}"
				CornerRadius="0" Padding="0" Margin="0">
				<Grid RowDefinitions="auto,*">
					<ToggleSwitch
						Grid.Row="0"
						Name="toggle"
						Padding="4"
						IsChecked="True"
						HorizontalAlignment="Left"
						Theme="{DynamicResource ButtonToggleSwitch}">
						<ToggleSwitch.OnContent>
							<i:Icon Value="fa-solid fa-angle-left" />
						</ToggleSwitch.OnContent>
						<ToggleSwitch.OffContent>
							<i:Icon Value="fa-solid fa-angle-right" />
						</ToggleSwitch.OffContent>
					</ToggleSwitch>
					<ScrollViewer 
						Grid.Row="1"
						Margin="4"
						IsVisible="{Binding #toggle.IsChecked, Mode=TwoWay}">
						<StackPanel Spacing="10" Width="200">
							<StackPanel.Styles>
								<Style Selector="Border.PaneBorder">
									<Setter Property="Margin" Value="0" />
									<Setter Property="Padding" Value="12,6" />
									<Setter Property="Theme" Value="{DynamicResource CardBorder}" />
								</Style>
							</StackPanel.Styles>

							<Border Classes="PaneBorder" Padding="0">
								<StackPanel>
									<StackPanel.Styles>
										<Style Selector="StackPanel.StatusStackPanel">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="Margin" Value="0,4" />
											<Setter Property="Spacing" Value="4" />
											<Setter Property="Orientation" Value="Horizontal" />
										</Style>
									</StackPanel.Styles>

									<StackPanel IsVisible="{Binding DeviceConnection.ConnectionState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static enums:ConnectionState.Disconnected}}">
										<StackPanel Classes="StatusStackPanel">
											<i:Icon Foreground="{DynamicResource SemiColorDanger}" Value="fa-solid fa-xmark" />
											<TextBlock Foreground="{DynamicResource SemiColorDanger}" Text="Disconnected" />
										</StackPanel>
										<Button Content="Connect" Classes="Primary" Command="{Binding TryConnect}" />
									</StackPanel>

									<StackPanel IsVisible="{Binding DeviceConnection.ConnectionState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static enums:ConnectionState.Connecting}}">
										<StackPanel Classes="StatusStackPanel">
											<i:Icon Foreground="{DynamicResource SemiColorWarning}" Value="fa-solid fa-rss" />
											<TextBlock Foreground="{DynamicResource SemiColorWarning}" Text="Connecting" />
										</StackPanel>
										<Button Content="Cancel" Classes="Primary" Command="{Binding TryCancelConnect}" />
									</StackPanel>

									<StackPanel IsVisible="{Binding DeviceConnection.ConnectionState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static enums:ConnectionState.Connected}}">
										<StackPanel Classes="StatusStackPanel">
											<i:Icon Foreground="{DynamicResource SemiColorSuccess}" Value="fa-solid fa-check" />
											<TextBlock Foreground="{DynamicResource SemiColorSuccess}" Text="Connected" />
										</StackPanel>
										<Button Content="Disconnect" Classes="Primary" Command="{Binding TryDisconnect}" />
									</StackPanel>
								</StackPanel>
							</Border>

							<Border Classes="PaneBorder">
								<StackPanel Spacing="10">
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Serial Code" />
										<SelectableTextBlock Text="{Binding Device.SerialCode, Converter={StaticResource IsNullOrEmptyElseConverter}, ConverterParameter='-'}" />
									</StackPanel>
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Name" />
										<SelectableTextBlock Text="{Binding Device.Name, Converter={StaticResource IsNullOrEmptyElseConverter}, ConverterParameter='-'}" />
									</StackPanel>
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Address" />
										<SelectableTextBlock Text="{Binding Device.Address, Converter={StaticResource IsNullOrEmptyElseConverter}, ConverterParameter='-'}" />
									</StackPanel>
									<StackPanel>
										<TextBlock Classes="Tertiary" Text="Slave Id" />
										<SelectableTextBlock Text="{Binding Device.SlaveId}" />
									</StackPanel>
								</StackPanel>
							</Border>

							<Border Classes="PaneBorder">
								<StackPanel Spacing="5">
									<TextBlock Text="Integral" Classes="H6" Theme="{DynamicResource TitleTextBlock}" />
									<ItemsControl ItemsSource="{Binding IntegralParameters}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Spacing="2" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</StackPanel>
							</Border>

							<Border Classes="PaneBorder">
								<StackPanel Spacing="5">
									<TextBlock Text="Current" Classes="H6" Theme="{StaticResource TitleTextBlock}" />
									<ItemsControl ItemsSource="{Binding CurrentParameters}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Spacing="2" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</StackPanel>
							</Border>
						</StackPanel>
					</ScrollViewer>
				</Grid>
			</Border>

			
		</Grid>
		
		<Panel Grid.Row="2">
			<Border Theme="{DynamicResource CardBorder}" Padding="4" CornerRadius="0" Margin="0">
				<StackPanel Orientation="Horizontal">
					<StackPanel Spacing="4" Orientation="Horizontal" 
						IsVisible="{Binding DeviceConnection.ConnectionState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static enums:ConnectionState.Connected}}" >
						<i:Icon Foreground="{DynamicResource SemiColorSuccess}" Value="fa-solid fa-check" />
						<TextBlock Foreground="{DynamicResource SemiColorSuccess}" Text="Connected" FontSize="12" />
					</StackPanel>
					<StackPanel Spacing="4" Orientation="Horizontal" 
						IsVisible="{Binding DeviceConnection.ConnectionState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static enums:ConnectionState.Connecting}}" >
						<i:Icon Foreground="{DynamicResource SemiColorWarning}" Value="fa-solid fa-rss" />
						<TextBlock Foreground="{DynamicResource SemiColorWarning}" Text="Connecting" FontSize="12" />
					</StackPanel>
					<StackPanel Spacing="4" Orientation="Horizontal"
						IsVisible="{Binding DeviceConnection.ConnectionState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static enums:ConnectionState.Disconnected}}" >
						<i:Icon Foreground="{DynamicResource SemiColorDanger}" Value="fa-solid fa-xmark" />
						<TextBlock Foreground="{DynamicResource SemiColorDanger}" Text="Disconnected" FontSize="12" />
					</StackPanel>
				</StackPanel>
			</Border>
		</Panel>
	</Grid>
</Window>
